generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id               Int        @id @default(autoincrement())
  authMethod       AuthMethod
  externalId       Int
  refreshTokenHash String?
  createdAt        DateTime   @default(now())
  updatedAt        DateTime   @updatedAt
  Profile          Profile?

  @@unique([authMethod, externalId])
  @@map("account")
}

enum AuthMethod {
  LOCAL
  YANDEX_ID
}

model AuthLocal {
  id           Int    @id @default(autoincrement())
  email        String @unique
  passwordHash String

  @@map("auth_local")
}

// TODO: delete as it is unused
model AuthExternal {
  id     Int       
  method AuthMethod
  login  String

  @@id([id, method])
  @@map("auth_external")
}

model Profile {
  account    Account   @relation(fields: [accountId], references: [id])
  name       String
  pictures   Picture[]
  accountId Int       @id
  taps       Tap[]

  @@map("profile")
}

model Picture {
  id      Int     @id @default(autoincrement())
  owner   Profile @relation(fields: [ownerId], references: [accountId])
  name    String
  content Json
  taps    Tap[]
  ownerId Int

  @@map("picture")
}

enum TapStatus {
  HIT
  MISS
}

model Tap {
  id        Int       @id @default(autoincrement())
  owner     Profile   @relation(fields: [ownerId], references: [accountId])
  picture   Picture   @relation(fields: [pictureId], references: [id])
  status    TapStatus
  x         Float
  y         Float
  createdAt DateTime  @default(now())
  pictureId Int
  ownerId   Int

  @@map("tap")
}
